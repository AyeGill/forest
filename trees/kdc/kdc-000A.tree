\title{Comma objects in general}
\author{kevin-carlson}
\date{2024-04-25}
\import{macros}

\p{Let #{\cat{V}} be a complete symmetric monoidal closed category under #{\Cat}, such as #{\Cat} itself or any of the forms of #{\Gray} (including #{\TwoCat}, see \ref{kdc-000B}.) Consider the weight
#{W:(1\to 1\leftarrow 1)\to \cat{V}} given by #{W= (1\stackrel{t}{\to} I\stackrel{s}{\leftarrow} 1)}, with #{I=(s\to t)} the arrow category. Then for any #{\cat{V}}-functor #{F:(1\to 1\leftarrow 1)\to \cat{X}}, say #{F=(x\to z\leftarrow y)}, we
may define the \emph{comma object} of #{F} as #{F}'s #{W}-weighted limit. (see \ref{kdc-0009}).}
\p{Unraveling the definition, if #{\cat{X}} is sufficiently complete then the comma object may be rewritten as the conical limit of the diagram}
\quiver{
  % https://q.uiver.app/#q=WzAsNSxbMCwwLCJ4Il0sWzIsMCwiel5JIl0sWzQsMCwieSJdLFsxLDEsInoiXSxbMywxLCJ6Il0sWzAsM10sWzEsMywiel5zIiwyXSxbMSw0LCJ6XnQiXSxbMiw0XV0=
\begin{tikzcd}
	x && {z^I} && y \\
	& z && z
	\arrow[from=1-1, to=2-2]
	\arrow["{z^s}"', from=1-3, to=2-2]
	\arrow["{z^t}", from=1-3, to=2-4]
	\arrow[from=1-5, to=2-4]
\end{tikzcd}
}
\p{In the cases we have in mind, the change-of-base from #{\cat{V}}-categories to 2-categories preserves limits, so that the comma object in the base change of #{\cat{X}} is the familiar comma object in a 2-category.
Interesting things happen with the #{z^I} contributor to this limit as #{\cat{V}} varies. To wit, when #{\cat{V}} is, respectively, #{\Cat} or #{\Gray^w} for #{w\in \{s,p,l,o\},} then #{z^I} always has 
(generalized) objects given by arrows in #{z} but morphisms given respectively by commutative, commutative, pseudo-commutative, lax-commutative, or oplax-commutative squares in #{z}. (In the last four cases the 2-morphisms 
are always given by 2-gon-shaped prisms, basically since the 3-morphisms in all forms of #{\Gray} are modifications.)} 
\p{This shows that we've produced the various kinds of generalized comma objects 
that occur in practice as, for instance, diagram categories. Specifically, if #{\cat{X}} is some category, then the diagram category of #{\cat{X}} is the (underlying category of the) comma object of the diagram #{1\stackrel{\cat{X}}{\to} \CAT \leftarrow \Cat}, 
when seen as lying in the #{\Gray^o}-category of 2-categories, 2-functors, and oplax maps. (Remember that in a lax map, the transformation goes opposite the direction of the algebra map, as in #{f(x)\otimes f(y)\to f(x\otimes y)} for
a lax monoidal functor #{f}: the transformation maps from the codomain's tensor product to the domain's. For the same reason, as you can check in the general 2-monad setting, an oplax map of arrows is the kind that has the transformation
going in the same direction as the \emph{map}, rather than the same direction as the arrows \emph{being} mapped.)}
\p{In the case just discussed, #{\CAT} is only a 2-category, so there's no possibility of worrying about whether the arrow filling a morphism in the lax or oplax slice is itself pseudo, lax, or oplax. However, in the multi-domain multi-physics project (\ref{kdc-0007},\ref{kdc-0008}), we're looking at an oplax slice, not over a mere category, but over a 2-category #{\twocat{K}} such as that of categories or of additive symmetric multicategories. Therefore the role of #{z} in our diagram cannot be played by #{\CAT} anymore! Instead, we have to choose some container \emph{of} 2-categories. Furthermore,
there is no 2-category of 2-categories, 2-functors, and pseudo, lax, or oplax natural transformations, 
so we should really be thinking of #{\twocat{K}} as lying in some form of #{\Gray}. Happily, #{\Gray} and #{\Gray\Cat} are both #{\Gray}-categories (up to size technicalities), so we can view our comma diagram as lying there.}
\p{To summarize, a diagram like the below, indicating an indexed diagram in an indexed object of #{\twocat{K}}, is itself a morphism in the comma object of the adjacent diagram, taken to lie in the #{\Gray^o}-category #{\Gray^o\Cat}. (Note that oplax transformations between functors into a category are automatically strictly natural, so the inclusion on the right is fine.)}
% https://q.uiver.app/#q=WzAsNixbMCwwLCJcXGNhdHtJfSJdLFsyLDAsIlxcY2F0e1N9Il0sWzEsMSwiXFx0d29jYXR7S30iXSxbMywxLCIxIl0sWzQsMSwiXFxHcmF5Xm8iXSxbNCwwLCJcXENhdCJdLFswLDFdLFswLDIsIlxcY2F0e0p9IiwyXSxbMSwyLCJcXGNhdHtWfSJdLFszLDQsIlxcdHdvY2F0e0t9IiwyXSxbNSw0XSxbNyw4LCJEIiwyLHsic2hvcnRlbiI6eyJzb3VyY2UiOjIwLCJ0YXJnZXQiOjIwfX1dXQ==
\quiver{\begin{tikzcd}
	{\cat{I}} && {\cat{S}} && \Cat \\
	& {\twocat{K}} && 1 & {\Gray^o}
	\arrow[from=1-1, to=1-3]
	\arrow[""{name=0, anchor=center, inner sep=0}, "{\cat{J}}"', from=1-1, to=2-2]
	\arrow[""{name=1, anchor=center, inner sep=0}, "{\cat{V}}", from=1-3, to=2-2]
	\arrow[from=1-5, to=2-5]
	\arrow["{\twocat{K}}"', from=2-4, to=2-5]
	\arrow["D"', shorten <=9pt, shorten >=9pt, Rightarrow, from=0, to=1]
\end{tikzcd}}