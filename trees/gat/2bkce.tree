\title{SliceC}
\taxon{definition}
\tag{model}\p{\code{function Ob(x::SliceOb{ObT, HomT})
    try
        (Ob[model.cat])(x.ob)
    catch e
         @fail ("ob is not valid", e)
    end
    try
        (Hom[model.cat])(x.hom, x.ob, model.over)
    catch e
         @fail ("hom is not valid", e)
    end
    x
end}}

\p{\code{function Hom(f::HomT, x::SliceOb{ObT, HomT}, y::SliceOb{ObT, HomT})
    try
        (Hom[model.cat])(f, x.ob, y.ob)
    catch e
         @fail ("morphism is not valid in base category", e)
    end
    (compose[model.cat])(f, y.hom; context = (a = x.ob, b = y.ob, c = model.over)) == x.hom ||  @fail("commutativity of triangle does not hold")
    f
end}}

\p{\code{function id(x::SliceOb{ObT, HomT})
    (id[model.cat])(x.ob)
end}}

\p{\code{function compose(f::HomT, g::HomT; context = nothing)
    (compose[model.cat])(f, g; context = if isnothing(context)
                nothing
            else
                map((x->begin
                            x.ob
                        end), context)
            end)
end}}